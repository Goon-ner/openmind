/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { NewNFT, NewNFTInterface } from "../NewNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nftByAddress",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "removeApprovals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160075534801562000015575f80fd5b506040518060400160405280600981526020016813dc195b881b5a5b9960ba1b815250604051806040016040528060048152602001631352539160e21b815250815f90816200006591906200011b565b5060016200007482826200011b565b505050620001e7565b634e487b7160e01b5f52604160045260245ffd5b600181811c90821680620000a657607f821691505b602082108103620000c557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200011657805f5260205f20601f840160051c81016020851015620000f25750805b601f840160051c820191505b8181101562000113575f8155600101620000fe565b50505b505050565b81516001600160401b038111156200013757620001376200007d565b6200014f8162000148845462000091565b84620000cb565b602080601f83116001811462000185575f84156200016d5750858301515b5f19600386901b1c1916600185901b178555620001df565b5f85815260208120601f198616915b82811015620001b55788860151825594840194600190910190840162000194565b5085821015620001d357878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61139780620001f55f395ff3fe608060405234801561000f575f80fd5b5060043610610106575f3560e01c80636352211e1161009e578063a22cb4651161006e578063a22cb4651461022f578063b88d4fde14610242578063c87b56dd14610255578063d204c45e14610268578063e985e9c51461027b575f80fd5b80636352211e146101e05780636a627842146101f357806370a082311461020657806395d89b4114610227575f80fd5b80631741cf3e116100d95780631741cf3e1461018757806323b872dd1461019a57806330fedccc146101ad57806342842e0e146101cd575f80fd5b806301ffc9a71461010a57806306fdde0314610132578063081812fc14610147578063095ea7b314610172575b5f80fd5b61011d610118366004610e45565b61028e565b60405190151581526020015b60405180910390f35b61013a6102df565b6040516101299190610eb4565b61015a610155366004610ec6565b61036e565b6040516001600160a01b039091168152602001610129565b610185610180366004610ef8565b610395565b005b610185610195366004610ec6565b6103a4565b6101856101a8366004610f20565b6103e6565b6101c06101bb366004610f59565b6104a3565b6040516101299190610f72565b6101856101db366004610f20565b61050c565b61015a6101ee366004610ec6565b61052b565b610185610201366004610f59565b610535565b610219610214366004610f59565b610555565b604051908152602001610129565b61013a6105b6565b61018561023d366004610fb5565b6105c5565b610185610250366004611075565b6105d0565b61013a610263366004610ec6565b6105e7565b6101856102763660046110ec565b6106aa565b61011d61028936600461114a565b6106d4565b5f6001600160e01b031982166380ac58cd60e01b14806102be57506001600160e01b03198216635b5e139f60e01b145b806102d957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f80546102ed9061117b565b80601f01602080910402602001604051908101604052809291908181526020018280546103199061117b565b80156103645780601f1061033b57610100808354040283529160200191610364565b820191905f5260205f20905b81548152906001019060200180831161034757829003601f168201915b5050505050905090565b5f61037882610701565b505f828152600560205260409020546001600160a01b03166102d9565b6103a0828233610757565b5050565b6103ad81610701565b6001600160a01b0316336001600160a01b0316146103c9575f80fd5b5f90815260056020526040902080546001600160a01b0319169055565b6001600160a01b03821661042e5760405162461bcd60e51b815260206004820152600a602482015269696e76616c696420746f60b01b60448201526064015b60405180910390fd5b5f61043a838333610764565b9050836001600160a01b0316816001600160a01b03161461049d5760405162461bcd60e51b815260206004820152601860248201527f696e636f72726563742070726576696f7573206f776e657200000000000000006044820152606401610425565b50505050565b6001600160a01b0381165f9081526003602090815260409182902080548351818402810184019094528084526060939283018282801561050057602002820191905f5260205f20905b8154815260200190600101908083116104ec575b50505050509050919050565b61052683838360405180602001604052805f8152506105d0565b505050565b5f6102d982610701565b600780545f9182610545836111b3565b9190505590506103a0828261092f565b5f6001600160a01b03821661059b5760405162461bcd60e51b815260206004820152600c60248201526b77726f6e67206f776e65722160a01b6044820152606401610425565b506001600160a01b03165f9081526004602052604090205490565b6060600180546102ed9061117b565b6103a03383836109ce565b6105db8484846103e6565b61049d84848484610a83565b5f818152600960205260408120805460609291906106049061117b565b80601f01602080910402602001604051908101604052809291908181526020018280546106309061117b565b801561067b5780601f106106525761010080835404028352916020019161067b565b820191905f5260205f20905b81548152906001019060200180831161065e57829003601f168201915b505050505090508060405160200161069391906111d7565b604051602081830303815290604052915050919050565b600780545f91826106ba836111b3565b9190505590506106ca8382610bd7565b6105268183610bf0565b6001600160a01b039182165f90815260066020908152604080832093909416825291909152205460ff1690565b5f818152600260205260408120546001600160a01b0316806102d95760405162461bcd60e51b815260206004820152600f60248201526e151bdad95b881b9bdd08195e1a5cdd608a1b6044820152606401610425565b6105268383836001610c07565b5f828152600260205260408120546001600160a01b039081169083161561079057610790818486610d22565b6001600160a01b03811615610887576107ab5f855f80610c07565b6001600160a01b0381165f90815260046020908152604080832080545f19019055600382528083208054825181850281018501909352808352919290919083018282801561081657602002820191905f5260205f20905b815481526020019060010190808311610802575b505050505090505f5b8151811015610884578582828151811061083b5761083b6111f2565b60200260200101510361087c576001600160a01b0383165f908152600360205260409020805482908110610871576108716111f2565b5f9182526020822001555b60010161081f565b50505b6001600160a01b038516156108d1576001600160a01b0385165f90815260046020908152604080832080546001908101909155600383529083208054918201815583529120018490555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b0382166109785760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103932b1b4b2bb32b960811b6044820152606401610425565b5f61098483835f610764565b90506001600160a01b038116156105265760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21036b4b73a32b960911b6044820152606401610425565b6001600160a01b038216610a175760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b21037b832b930ba37b960811b6044820152606401610425565b6001600160a01b038381165f81815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561049d57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610ac5903390889087908790600401611206565b6020604051808303815f875af1925050508015610aff575060408051601f3d908101601f19168201909252610afc91810190611242565b60015b610b7d573d808015610b2c576040519150601f19603f3d011682016040523d82523d5f602084013e610b31565b606091505b5080515f03610b755760405162461bcd60e51b815260206004820152601060248201526f34b73b30b634b2103932b1b4b2bb32b960811b6044820152606401610425565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610bd05760405162461bcd60e51b815260206004820152601060248201526f34b73b30b634b2103932b1b4b2bb32b960811b6044820152606401610425565b5050505050565b6103a0828260405180602001604052805f815250610db3565b5f82815260096020526040902061052682826112a1565b8080610c1b57506001600160a01b03821615155b15610cf3575f610c2a84610701565b90506001600160a01b03831615801590610c565750826001600160a01b0316816001600160a01b031614155b8015610c695750610c6781846106d4565b155b15610ca95760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b21030b8383937bb32b960811b6044820152606401610425565b8115610cf15783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260056020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610d2d838383610dc9565b610526576001600160a01b038316610d7c5760405162461bcd60e51b81526020600482015260126024820152713737b716b2bc34b9ba32b73a103a37b5b2b760711b6044820152606401610425565b60405162461bcd60e51b815260206004820152600c60248201526b6e6f20617070726f76616c7360a01b6044820152606401610425565b610dbd838361092f565b6105265f848484610a83565b5f6001600160a01b03831615801590610e255750826001600160a01b0316846001600160a01b03161480610e025750610e0284846106d4565b80610e2557505f828152600560205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b031981168114610e42575f80fd5b50565b5f60208284031215610e55575f80fd5b8135610e6081610e2d565b9392505050565b5f5b83811015610e81578181015183820152602001610e69565b50505f910152565b5f8151808452610ea0816020860160208601610e67565b601f01601f19169290920160200192915050565b602081525f610e606020830184610e89565b5f60208284031215610ed6575f80fd5b5035919050565b80356001600160a01b0381168114610ef3575f80fd5b919050565b5f8060408385031215610f09575f80fd5b610f1283610edd565b946020939093013593505050565b5f805f60608486031215610f32575f80fd5b610f3b84610edd565b9250610f4960208501610edd565b9150604084013590509250925092565b5f60208284031215610f69575f80fd5b610e6082610edd565b602080825282518282018190525f9190848201906040850190845b81811015610fa957835183529284019291840191600101610f8d565b50909695505050505050565b5f8060408385031215610fc6575f80fd5b610fcf83610edd565b915060208301358015158114610fe3575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff8084111561101c5761101c610fee565b604051601f8501601f19908116603f0116810190828211818310171561104457611044610fee565b8160405280935085815286868601111561105c575f80fd5b858560208301375f602087830101525050509392505050565b5f805f8060808587031215611088575f80fd5b61109185610edd565b935061109f60208601610edd565b925060408501359150606085013567ffffffffffffffff8111156110c1575f80fd5b8501601f810187136110d1575f80fd5b6110e087823560208401611002565b91505092959194509250565b5f80604083850312156110fd575f80fd5b61110683610edd565b9150602083013567ffffffffffffffff811115611121575f80fd5b8301601f81018513611131575f80fd5b61114085823560208401611002565b9150509250929050565b5f806040838503121561115b575f80fd5b61116483610edd565b915061117260208401610edd565b90509250929050565b600181811c9082168061118f57607f821691505b6020821081036111ad57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f600182016111d057634e487b7160e01b5f52601160045260245ffd5b5060010190565b5f82516111e8818460208701610e67565b9190910192915050565b634e487b7160e01b5f52603260045260245ffd5b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061123890830184610e89565b9695505050505050565b5f60208284031215611252575f80fd5b8151610e6081610e2d565b601f82111561052657805f5260205f20601f840160051c810160208510156112825750805b601f840160051c820191505b81811015610bd0575f815560010161128e565b815167ffffffffffffffff8111156112bb576112bb610fee565b6112cf816112c9845461117b565b8461125d565b602080601f831160018114611302575f84156112eb5750858301515b5f19600386901b1c1916600185901b178555611359565b5f85815260208120601f198616915b8281101561133057888601518255948401946001909101908401611311565b508582101561134d57878501515f19600388901b60f8161c191681555b505060018460011b0185555b50505050505056fea26469706673582212205dce4ec22ee4533661062e51512c2548e6f9bd43f9dd48183bb1a605b27d587d64736f6c63430008180033";

type NewNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NewNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NewNFT__factory extends ContractFactory {
  constructor(...args: NewNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NewNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NewNFT__factory {
    return super.connect(runner) as NewNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NewNFTInterface {
    return new Interface(_abi) as NewNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NewNFT {
    return new Contract(address, _abi, runner) as unknown as NewNFT;
  }
}
